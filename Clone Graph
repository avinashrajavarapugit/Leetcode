"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""
class Solution:
    def cloneGraph(self, node: 'Node') -> 'Node':
        lookup = {}
        def dfs(root):
            if not root:
                return None

            copy = Node(val=root.val)
            lookup[root.val] = copy
            for nei in root.neighbors:
                if nei.val not in lookup:
                    lookup[nei.val] = dfs(nei)
                copy.neighbors.append(lookup[nei.val])
            
            return copy
        
        return dfs(node)
