# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

class Solution(object):
    def minDiffInBST(self, root):
        values = []
        stack = []
        result = float('inf')
        prevNode = None
        while root!= None or len(stack) > 0:
            if root!=None:
                stack.append(root)
                root=root.left
            else:
                node = stack.pop()
                values.append(node.val)
                if prevNode:
                    result = min(result, node.val - prevNode.val)
                prevNode = node
                root = node.right
        return result
