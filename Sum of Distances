class Solution:
    def distance(self, nums: List[int]) -> List[int]:
        n = len(nums)
        lookup = collections.defaultdict(list)
        for index,x in enumerate(nums):
            lookup[x].append(index)
        
        ans = [None] * n

        def solve(x):
            arr = lookup[x]
            total = 0
            for i in range(1, len(arr)):
                total += arr[i] - arr[0]

            ans[arr[0]] = total

            for i in range(1, len(arr)):
                total += (arr[i] - arr[i-1])*(i+1)
                total -= (arr[i] - arr[i-1])*(len(arr)- (i-2) - 1)
                
                ans[arr[i]] = total
        
        for x in lookup.keys():
            solve(x)

        return ans
