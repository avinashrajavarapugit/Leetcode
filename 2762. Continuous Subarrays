import math
class Solution:
    def continuousSubarrays(self, nums: List[int]) -> int:
        #|max - min| <= 2
        maxhp = []
        minhp = []
        l, r = 0, 0
        res = 0

        while r < len(nums):
            heappush(maxhp, (-nums[r], r))
            heappush(minhp, (nums[r], r))

            while l < r and -maxhp[0][0] - minhp[0][0] > 2:
                l += 1

                while minhp and minhp[0][1] < l:
                    heappop(minhp)
                
                while maxhp and maxhp[0][1] < l:
                    heappop(maxhp)
                
            res += (r - l + 1)
            r += 1
            
        return res

