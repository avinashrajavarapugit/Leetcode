# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def delNodes(self, root: Optional[TreeNode], to_delete: List[int]) -> List[TreeNode]:
        if not root:
            return []
        
        d = set(to_delete)
        res = []

        pq = deque([root])

        while pq:
            curr = pq.popleft()

            if curr.left:
                pq.append(curr.left)
                if curr.left.val in d:
                    curr.left = None
                
            if curr.right:
                pq.append(curr.right)
                if curr.right.val in d:
                    curr.right = None
                
            if curr.val in d:
                if curr.left:
                    res.append(curr.left)
                if curr.right:
                    res.append(curr.right)
                
        if root.val not in d:
            res.append(root)
        
        return res
                
            
